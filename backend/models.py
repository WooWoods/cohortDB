from peewee import Model, TextField, IntegerField, FloatField, DateField, BooleanField
from database import db

class BaseModel(Model):
    class Meta:
        database = db

class ReportedAges(BaseModel):
    sample = TextField(primary_key=True)
    gender = TextField(null=True)
    age = IntegerField(null=True)
    sample_date = DateField(null=True)
    menopausal_status = TextField(null=True)
    ptid = TextField(null=True)
    esti_gender = TextField(null=True)
    cfdna = FloatField(null=True)
    wbc = FloatField(null=True)
    colon = FloatField(null=True)
    liver = FloatField(null=True)
    ovary = FloatField(null=True)
    pancreas = FloatField(null=True)
    prostate = FloatField(null=True)
    small_intestine = FloatField(null=True)
    spleen = FloatField(null=True)
    stomach = FloatField(null=True)
    adj_ovary_menopause = FloatField(null=True)
    adj_ovary_no_menopause = FloatField(null=True)

class BsRate(BaseModel):
    sample = TextField(primary_key=True)
    puc19vector = FloatField(null=True)
    lambda_dna_conversion_rate = FloatField(null=True)

class Coverage(BaseModel):
    sample = TextField(primary_key=True)
    pct_v2_sites_5x = FloatField(null=True)
    pct_v2_sites_15x = FloatField(null=True)
    pct_v2_sites_20x = FloatField(null=True)
    pct_pcages_sites_5x = FloatField(null=True)
    pct_pcages_sites_15x = FloatField(null=True)
    pct_pcages_sites_20x = FloatField(null=True)
    pct_horvath_sites_5x = FloatField(null=True)
    pct_horvath_sites_15x = FloatField(null=True)
    pct_horvath_sites_20x = FloatField(null=True)
    pct_skinblood_sites_5x = FloatField(null=True)
    pct_skinblood_sites_15x = FloatField(null=True)
    pct_skinblood_sites_20x = FloatField(null=True)

# TODO: Add other models for the rest of the sheets
class Fastp(BaseModel):
    sample = TextField(primary_key=True)
    total_reads = IntegerField(null=True)
    total_bases = IntegerField(null=True)
    q20_bases = IntegerField(null=True)
    q30_bases = IntegerField(null=True)
    q20_rate = FloatField(null=True)
    q30_rate = FloatField(null=True)
    read1_mean_length = IntegerField(null=True)
    read2_mean_length = IntegerField(null=True)
    gc_content = FloatField(null=True)
    passed_filter_reads = IntegerField(null=True)
    corrected_reads = IntegerField(null=True)
    corrected_bases = IntegerField(null=True)
    low_quality_reads = IntegerField(null=True)
    too_many_N_reads = IntegerField(null=True)
    too_short_reads = IntegerField(null=True)
    too_long_reads = IntegerField(null=True)
    duplication_rate = FloatField(null=True)
    adapter_trimmed_reads = IntegerField(null=True)
    adapter_trimmed_bases = IntegerField(null=True)
    read1_adapter_sequence = TextField(null=True)
    read2_adapter_sequence = TextField(null=True)
    total_polyx_trimmed_reads = IntegerField(null=True)
    polyx_trimmed_reads = IntegerField(null=True)
    total_polyx_trimmed_bases = IntegerField(null=True)
    polyx_trimmed_bases = IntegerField(null=True)
    read1_total_reads = IntegerField(null=True)
    read1_total_bases = IntegerField(null=True)
    read1_q20_bases = IntegerField(null=True)
    read1_q30_bases = IntegerField(null=True)
    read2_total_reads = IntegerField(null=True)
    read2_total_bases = IntegerField(null=True)
    read2_q20_bases = IntegerField(null=True)
    read2_q30_bases = IntegerField(null=True)

class Markdup(BaseModel):
    sample = TextField(primary_key=True)
    total_read_pairs = IntegerField(null=True)
    read_pair_duplicates = IntegerField(null=True)
    percent_duplication = FloatField(null=True)

class PicardAlignmentSummary(BaseModel):
    sample = TextField(primary_key=True)
    category = TextField(null=True)
    total_reads = IntegerField(null=True)
    pf_reads = IntegerField(null=True)
    pct_pf_reads = FloatField(null=True)
    pf_noise_reads = IntegerField(null=True)
    pf_reads_aligned = IntegerField(null=True)
    pct_pf_reads_aligned = FloatField(null=True)
    pf_aligned_bases = IntegerField(null=True)
    pf_hq_aligned_reads = IntegerField(null=True)
    pf_hq_aligned_bases = IntegerField(null=True)
    pf_hq_aligned_q20_bases = IntegerField(null=True)
    pf_hq_median_mismatches = FloatField(null=True)
    pf_mismatch_rate = FloatField(null=True)
    pf_hq_error_rate = FloatField(null=True)
    pf_indel_rate = FloatField(null=True)
    mean_read_length = FloatField(null=True)
    sd_read_length = FloatField(null=True)
    median_read_length = IntegerField(null=True)
    mad_read_length = IntegerField(null=True)
    min_read_length = IntegerField(null=True)
    max_read_length = IntegerField(null=True)
    mean_aligned_read_length = FloatField(null=True)
    reads_aligned_in_pairs = IntegerField(null=True)
    pct_reads_aligned_in_pairs = FloatField(null=True)
    pf_reads_improper_pairs = IntegerField(null=True)
    pct_pf_reads_improper_pairs = FloatField(null=True)
    bad_cycles = IntegerField(null=True)
    strand_balance = FloatField(null=True)
    pct_chimeras = FloatField(null=True)
    pct_adapter = FloatField(null=True)
    pct_softclip = FloatField(null=True)
    pct_hardclip = FloatField(null=True)
    avg_pos_3prime_softclip_length = FloatField(null=True)
    library = TextField(null=True)
    read_group = TextField(null=True)

class PicardGcBias(BaseModel):
    sample = TextField(primary_key=True)
    accumulation_level = FloatField(null=True)
    reads_used = IntegerField(null=True)
    gc = IntegerField(null=True)
    windows = IntegerField(null=True)
    read_starts = IntegerField(null=True)
    mean_base_quality = FloatField(null=True)
    normalized_coverage = FloatField(null=True)
    error_bar_width = FloatField(null=True)
    library = TextField(null=True)
    read_group = TextField(null=True)

class PicardGcBiasSummary(BaseModel):
    sample = TextField(primary_key=True)
    accumulation_level = FloatField(null=True)
    reads_used = IntegerField(null=True)
    window_size = IntegerField(null=True)
    total_clusters = IntegerField(null=True)
    aligned_reads = IntegerField(null=True)
    at_dropout = FloatField(null=True)
    gc_dropout = FloatField(null=True)
    gc_nc_0_19 = FloatField(null=True)
    gc_nc_20_39 = FloatField(null=True)
    gc_nc_40_59 = FloatField(null=True)
    gc_nc_60_79 = FloatField(null=True)
    gc_nc_80_100 = FloatField(null=True)
    library = TextField(null=True)
    read_group = TextField(null=True)

class PicardHs(BaseModel):
    sample = TextField(primary_key=True)
    bait_set = TextField(null=True)
    bait_territory = IntegerField(null=True)
    bait_design_efficiency = FloatField(null=True)
    on_bait_bases = IntegerField(null=True)
    near_bait_bases = IntegerField(null=True)
    off_bait_bases = IntegerField(null=True)
    pct_selected_bases = FloatField(null=True)
    pct_off_bait = FloatField(null=True)
    on_bait_vs_selected = FloatField(null=True)
    mean_bait_coverage = FloatField(null=True)
    pct_usable_bases_on_bait = FloatField(null=True)
    pct_usable_bases_on_target = FloatField(null=True)
    fold_enrichment = FloatField(null=True)
    hs_library_size = IntegerField(null=True)
    hs_penalty_10x = FloatField(null=True)
    hs_penalty_20x = FloatField(null=True)
    hs_penalty_30x = FloatField(null=True)
    hs_penalty_40x = FloatField(null=True)
    hs_penalty_50x = FloatField(null=True)
    hs_penalty_100x = FloatField(null=True)
    target_territory = IntegerField(null=True)
    genome_size = IntegerField(null=True)
    total_reads = IntegerField(null=True)
    pf_reads = IntegerField(null=True)
    pf_bases = IntegerField(null=True)
    pf_unique_reads = IntegerField(null=True)
    pf_uq_reads_aligned = IntegerField(null=True)
    pf_bases_aligned = IntegerField(null=True)
    pf_uq_bases_aligned = IntegerField(null=True)
    on_target_bases = IntegerField(null=True)
    pct_pf_reads = FloatField(null=True)
    pct_pf_uq_reads = FloatField(null=True)
    pct_pf_uq_reads_aligned = FloatField(null=True)
    mean_target_coverage = FloatField(null=True)
    median_target_coverage = FloatField(null=True)
    max_target_coverage = FloatField(null=True)
    min_target_coverage = FloatField(null=True)
    zero_cvg_targets_pct = FloatField(null=True)
    pct_exc_dupe = FloatField(null=True)
    pct_exc_adapter = FloatField(null=True)
    pct_exc_mapq = FloatField(null=True)
    pct_exc_baseq = FloatField(null=True)
    pct_exc_overlap = FloatField(null=True)
    pct_exc_off_target = FloatField(null=True)
    fold_80_base_penalty = FloatField(null=True)
    pct_target_bases_1x = FloatField(null=True)
    pct_target_bases_2x = FloatField(null=True)
    pct_target_bases_10x = FloatField(null=True)
    pct_target_bases_20x = FloatField(null=True)
    pct_target_bases_30x = FloatField(null=True)
    pct_target_bases_40x = FloatField(null=True)
    pct_target_bases_50x = FloatField(null=True)
    pct_target_bases_100x = FloatField(null=True)
    pct_target_bases_250x = FloatField(null=True)
    pct_target_bases_500x = FloatField(null=True)
    pct_target_bases_1000x = FloatField(null=True)
    pct_target_bases_2500x = FloatField(null=True)
    pct_target_bases_5000x = FloatField(null=True)
    pct_target_bases_10000x = FloatField(null=True)
    pct_target_bases_25000x = FloatField(null=True)
    pct_target_bases_50000x = FloatField(null=True)
    pct_target_bases_100000x = FloatField(null=True)
    at_dropout = FloatField(null=True)
    gc_dropout = FloatField(null=True)
    het_snp_sensitivity = FloatField(null=True)
    het_snp_q = FloatField(null=True)
    library = TextField(null=True)
    read_group = TextField(null=True)

class PicardInsertSize(BaseModel):
    sample = TextField(primary_key=True)
    median_insert_size = IntegerField(null=True)
    mode_insert_size = IntegerField(null=True)
    median_absolute_deviation = IntegerField(null=True)
    min_insert_size = IntegerField(null=True)
    max_insert_size = IntegerField(null=True)
    mean_insert_size = FloatField(null=True)
    standard_deviation = FloatField(null=True)
    read_pairs = IntegerField(null=True)
    pair_orientation = TextField(null=True)
    width_of_10_percent = IntegerField(null=True)
    width_of_20_percent = IntegerField(null=True)
    width_of_30_percent = IntegerField(null=True)
    width_of_40_percent = IntegerField(null=True)
    width_of_50_percent = IntegerField(null=True)
    width_of_60_percent = IntegerField(null=True)
    width_of_70_percent = IntegerField(null=True)
    width_of_80_percent = IntegerField(null=True)
    width_of_90_percent = IntegerField(null=True)
    width_of_95_percent = IntegerField(null=True)
    width_of_99_percent = IntegerField(null=True)
    library = TextField(null=True)
    read_group = TextField(null=True)

class PicardQualityYield(BaseModel):
    sample = TextField(primary_key=True)
    total_reads = IntegerField(null=True)
    pf_reads = IntegerField(null=True)
    read_length = IntegerField(null=True)
    total_bases = IntegerField(null=True)
    pf_bases = IntegerField(null=True)
    q20_bases = IntegerField(null=True)
    pf_q20_bases = IntegerField(null=True)
    q30_bases = IntegerField(null=True)
    pf_q30_bases = IntegerField(null=True)
    q20_equivalent_yield = IntegerField(null=True)
    pf_q20_equivalent_yield = IntegerField(null=True)

class Screen(BaseModel):
    sample = TextField(primary_key=True)
    sample_r1r2 = TextField(null=True)
    human = FloatField(null=True)
    lambda_dna = FloatField(null=True)
    pUC19 = FloatField(null=True)
    human_unmap = FloatField(null=True)

class User(BaseModel):
    id = IntegerField(primary_key=True)
    username = TextField(unique=True)
    hashed_password = TextField()
    is_admin = BooleanField(default=False)
